Timer Slack Controller
=====================

Overview
--------

Every task_struct has timer_slack_ns value. This value uses to round up
poll() and select() timeout values. This feature can be useful in
mobile environment where combined wakeups are desired.

cgroup subsys "timer_slack" implement timer slack controller. It
provides a way to set minimal timer slack value for a group of tasks.
If a task belongs to a cgroup with minimal timer slack value higher than
task's value, cgroup's value will be applied.

User interface
--------------

To get timer slack controller functionality you need to enable it in
kernel configuration:

CONFIG_CGROUP_TIMER_SLACK=y

The controller provides only one file:

# mount -t cgroup -o timer_slack none /sys/fs/cgroup
# ls /sys/fs/cgroup/timer_slack.*
/sys/fs/cgroup/timer_slack.min_slack_ns

By defeault it's 0:

# cat /sys/fs/cgroup/timer_slack.min_slack_ns
0

You can set it to some value:

# echo 50000 > /sys/fs/cgroup/timer_slack.min_slack_ns
# cat /sys/fs/cgroup/timer_slack.min_slack_ns
50000

Tasks still can set task's value below 50000 using prctl(), but in this
case cgroup's value will be applied.

Timer slack controller supports hierarchical groups. The only rule:
parent's minimal timer slack value should be less or equal to child's.

# mkdir /sys/fs/cgroup/a
# cat /sys/fs/cgroup/a/timer_slack.min_slack_ns
50000
# echo 70000 > /sys/fs/cgroup/a/timer_slack.min_slack_ns
# cat /sys/fs/cgroup/a/timer_slack.min_slack_ns
70000

You'll get -EPERM, if you try to set child's timer_slack.min_slack_ns >
parent's timer_slack.min_slack_ns:

# /bin/echo 40000 > /sys/fs/cgroup/a/timer_slack.min_slack_ns
/bin/echo: write error: Operation not permitted

Child's value will be adjusted if necessary on parent's value update:

# echo 100000 > /sys/fs/cgroup/timer_slack.min_slack_ns
# cat /sys/fs/cgroup/timer_slack.min_slack_ns 
100000
# cat /sys/fs/cgroup/a/timer_slack.min_slack_ns 
100000
